{
  "type": "json",
  "tokens": [
    "{",
    "\n    ",
    "\"assign\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"a\"",
    ",",
    "\n        ",
    "\"as\"",
    ",",
    "\n        ",
    "\"ass\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"br_cl\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"brc\"",
    ",",
    "\n        ",
    "\"bc\"",
    ",",
    "\n        ",
    "\"brac_cl\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"br_op\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"bro\"",
    ",",
    "\n        ",
    "\"bo\"",
    ",",
    "\n        ",
    "\"brac_op\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"com\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"c\"",
    ",",
    "\n        ",
    "\"co\"",
    ",",
    "\n        ",
    "\"comment\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"func\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"f\"",
    ",",
    "\n        ",
    "\"fu\"",
    ",",
    "\n        ",
    "\"fun\"",
    ",",
    "\n        ",
    "\"function\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"kwd\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"k\"",
    ",",
    "\n        ",
    "\"kw\"",
    ",",
    "\n        ",
    "\"keyword\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"num\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"n\"",
    ",",
    "\n        ",
    "\"nu\"",
    ",",
    "\n        ",
    "\"number\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"op\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"o\"",
    ",",
    "\n        ",
    "\"operator\"",
    ",",
    "\n        ",
    "\"oper\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"punct\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"pu\"",
    ",",
    "\n        ",
    "\"punctuation\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"str\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"s\"",
    ",",
    "\n        ",
    "\"st\"",
    ",",
    "\n        ",
    "\"string\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"unk\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"u\"",
    ",",
    "\n        ",
    "\"un\"",
    ",",
    "\n        ",
    "\"unknown\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"var\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"v\"",
    ",",
    "\n        ",
    "\"va\"",
    ",",
    "\n        ",
    "\"variable\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"wsp\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"ws\"",
    ",",
    "\n        ",
    "\"w\"",
    ",",
    "\n        ",
    "\"whitespace\"",
    "\n    ",
    "]",
    ",",
    "\n    ",
    "\"obj\"",
    ":",
    " ",
    "[",
    "\n        ",
    "\"ob\"",
    ",",
    "\n        ",
    "\"object\"",
    "\n    ",
    "]",
    "\n",
    "}"
  ],
  "tags": [
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "punct",
    "wsp",
    "str",
    "punct",
    "wsp",
    "br_op",
    "wsp",
    "str",
    "punct",
    "wsp",
    "str",
    "wsp",
    "br_cl",
    "wsp",
    "br_cl"
  ],
  "changed": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ]
}
